{
  "name": "Packet Sampling for Online Classification of Encrypted Internet Traffic",
  "tagline": "Amostragem de Pacotes para Classificação Online de Tráfego Internet Cifrado",
  "body": "Packet Sampling for Online Classification of Encrypted Internet Traffic\r\n=======\r\n\r\nWhat is it?\r\n-----------\r\n\r\nThe choice of a specific sampling strategy requires a broad and clear understanding of the capabilities and limitations of each technique and the specific behavior of the network on which it will be applied. Therefore, to properly consider a greater number of traffic scenarios and specific needs this tool provides a wider collection of packet sampling techniques, presented in the table.\r\n\r\n| Selection Scheme         | Trigger  |\r\n| ------------------------ | -------- |\r\n| Systematic Count-based   | position |\r\n| Systematic Time-based    | time     |\r\n| Simple Random            | position |\r\n| Additive Random          | position |\r\n| Multi-Adaptive           | time     |\r\n\r\n\r\n\r\nVerifying Your Download\r\n-----------\r\n\r\nIf you’re running on Linux, you probably already have GPG (GNU Privacy Guard) installed. If you’re on Windows or OS X, you’ll need to install the appropriate version for your platform.\r\n\r\n   *  If you’re on a PC running Windows, download and install GPG4Win from [here](http://gpg4win.org/download.html). \r\n   *  If you’re on a Macintosh running OS X, download and install GPGTools from [here](https://gpgtools.org/). \r\n\r\nSince Windows does not have the native ability to calculate SHA1 checksums, you will also need a utility such as [Microsoft File Checksum Integrity Verifier](http://www.microsoft.com/en-us/download/details.aspx?id=11533) or [Hashtab](http://www.implbits.com/HashTab/HashTabWindows.aspx) to verify your download.\r\n\r\nOnce you’ve installed GPG, you’ll need to download and import a copy of the Kali Linux official key. Do this with the following command:\r\n```\r\n$ gpg --keyserver hkp://keys.gnupg.net --recv-key CE994164\r\n```\r\n\r\nYour output should look like this:\r\n\r\n```\r\ngpg: key CE994164: public key \"Ricardo Costa Oliveira <rcoliveira314@gmail.com>\" imported\r\ngpg: Total number processed: 1\r\ngpg:               imported: 1  (RSA: 1)\r\n```\r\nVerify that the key is properly installed with the command:\r\n\r\n```\r\n$ gpg --list-keys --with-fingerprint  CE994164\r\n```\r\n\r\nThe output will look like this:\r\n\r\n```\r\npub   4096R/CE994164 2016-01-13 [expires: 2020-01-13]\r\n      Key fingerprint = 10C9 CEE5 72EE 77A2 C950  39AA 4A02 4A0C CE99 4164\r\nuid       [ultimate] Ricardo Costa Oliveira <rcoliveira314@gmail.com>\r\nsub   4096R/C49636FA 2016-01-13 [expires: 2020-01-13]\r\n```\r\nYou’re now set up to validate your download.\r\n\r\nThis method does not rely on the integrity of the web site you downloaded the file from, only the official development team key that you install independently. To verify your file this way, you will need to download three files:\r\n\r\n   *  The ZIP file itself (e.g. Packet-Sampling-for-Online-Classification-of-Encrypted-Internet-Traffic-master.zip)\r\n   *  The file containing the calculated SHA256 hash for the ZIP, [SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic](https://raw.githubusercontent.com/rcostaoliveira/KEYS-SUMS/master/SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic)\r\n   *  The signed version of that file, [SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic.asc](https://raw.githubusercontent.com/rcostaoliveira/KEYS-SUMS/master/SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic.asc)\r\n\r\nBefore verifying the checksums of the file, you must ensure that the SHA2SUM file is the one generated by me. That’s why the file is signed by my official key with a detached signature in SHA2SUM.asc.\r\n\r\nOnce you have downloaded both SHA2SUM and SHA2SUM.asc, you can verify the signature as follows:\r\n\r\n```\r\n$ gpg --verify SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic.asc SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic\r\ngpg: Signature made Fri Sep 16 14:25:42 2016 WEST using RSA key ID CE994164\r\ngpg: Good signature from \"Ricardo Costa Oliveira <rcoliveira314@gmail.com>\" [ultimate]\r\n```\r\n\r\nIf you did get the “Good signature” response, you can now be assured that the checksum in the SHA2SUM file was actually provided by the development team. All that remains to be done to complete the verification is to validate that the signature you compute from the file you’ve downloaded matches the one in the SHA2SUM file. You can do that on Linux or OS X with the following command (assuming that the file is named “Amostragem-de-Pacotes-para-Classificacao-Online-de-Trafego-Internet-Cifrado-master.zip” and is in your working directory):\r\n\r\n```\r\n$ grep Packet-Sampling-for-Online-Classification-of-Encrypted-Internet-Traffic-master.zip SHA2SUM_Packet_Sampling_for_Online_Classification_of_Encrypted_Internet_Traffic | shasum -a 256 -c\r\n```\r\n\r\nIf the file is successfully authenticated, the response will look like this:\r\n\r\n```\r\nPacket-Sampling-for-Online-Classification-of-Encrypted-Internet-Traffic-master.zip: OK\r\n```\r\nOnce you’ve downloaded and verified your file, you can proceed.\r\n\r\nUsage\r\n-----------\r\n\r\nAs simple as providing the selection scheme. Here goes the help:\r\n\r\n```\r\n$ ./sampling --help\r\n\r\nPacket sampling for online classification of encrypted internet traffic.\r\nRicardo Oliveira '16\r\n\r\nUsage: ./sampling [options]\r\n\r\nOptions:\r\n-h,--help   show this help message and exit\r\n\r\n  General options:\r\n    -v, --verbose       Verbose mode.\r\n                        Default: brief\r\n    -f FILE, --file FILE\r\n                        Open a file with previous captured traffic.\r\n    -o FILE, --output FILE\r\n                        Specifies the directory where the captured\r\n                        traffic is saved in a pcap file.\r\n    -p , --sniffer\r\n                        No selection scheme is applied to the captured traffic.\r\n    -s INTERVAL, --systematic_count INTERVAL\r\n                        Sets the interval between samples to INTERVAL.\r\n    -t INTERVAL, --systematic_time INTERVAL\r\n                        Sets the interval between samples to INTERVAL ms.\r\n    -r N, --simple_random N\r\n                        Sets the interval between samples to\r\n                        [0 , 2*sampling rate-2].\r\n    -a N, --random_additive N\r\n                        Specifies the average sampling rate.\r\n                        On average each sampling will occur every N packets.\r\n    -m , --multi_adaptive\r\n                        Default values: min next sample size = 10000 ms\r\n                                        max next samplesize = 500000 ms\r\n                                        min interval between samples =  10000 ms\r\n                                        max interval between samples = 500000 ms\r\n                                        window size = 10\r\n```\r\n\r\n### And a real test using multi-adaptive selection scheme\r\nThe network traffic used here was captured in a controlled environment and can be downloaded [here](http://download_trace_usado_nos_teste.com).\r\n\r\n```\r\n$ ./sampling --file captured-traffic.pcap --output /user/home/Desktop/  --multi_adaptive\r\n\r\n                Statistical Parameters\r\n\r\nFirst Packet Fri Aug  5 18:48:03 2011\r\nLast  Packet Fri Aug  5 19:06:19 2011\r\nElapsed Time 1095.917873 s\r\n\r\nOverhead :\r\n  Number of packets captured : 1890723\r\n  Number of packets selected : 422516 (22.34680 %)\r\n  Appropriate sample size :    32971\r\n\r\n  Total Data Volume :          1393631968 Bytes\r\n  Sampled Data Volume :        311384916  Bytes\r\n  Number of Samples :          42535\r\n\r\nThroughput Estimation:\r\n  Total Throughput :           1271657 bytes/s\r\n  Sampled Throughput :         284131  bytes/s\r\n  Total Peak to average :      1.280\r\n  Sampled Peak to average :    1.285\r\n  Correlation :                0.999\r\n  Relative Error :             0.001\r\n  Mean :                       737\r\n  Standard Deviation :         682.867\r\n\r\n```\r\n\r\n<!--- \r\nTODO\r\n-----------\r\n--> \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}